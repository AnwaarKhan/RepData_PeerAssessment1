lm(y -x)
trace()
traceback()
library(swirl)
swirl()
debug(lm)
lm(y -x)
install_from_swirl("R Programming")
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
character(cls_list)
as.character(cls_list)
?apply
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply()
sapply(flag_colors,sum)
sapply(mean(flag_colors),mean)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply()
range(flag_shapes)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_Vals <- lapply(unique(c(3, 4, 5, 5, 5, 6, 6)))
unique_Vals <- lapply(c(3, 4, 5, 5, 5, 6, 6))
unique_Vals <- lapply()
unique_Vals <- lapply(flags)
unique_Vals <- lapply(flags,)
unique_Vals <- lapply(data=flags)
unique_vals <- lapply(data=flags)
unique_vals <- lapply(flags, unique)
unique_vals
lenght(unique_vals)
lenght(unique_vals())
length(unique_vals)
sapply(unique_vals)
sapply(lenght(unique_vals))
sapply(flags, unique)
omnitest(correctExpr='sapply(flags, unique)')
sapply(flags, length)
sapply(flags, unique)
sapply(flags, unique_vals)
sapply(flags, lenght(unique_vals)
)
unique_vals
sapply(unique_vals)
sapply(unique_vals,unique)
sapply(unique_vals,`length<-.factor`)
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("swirl")
swirl_version()
swirl_version
swirl(version)
swirl(version())
0
install.packages("swirl")
install.packages("swirl")
library(data.table)
direccion3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
archivo3 <- "GDP.csv"
download.file(direccion3, archivo3)
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <- GDP[X != ""]
GDP <- GDP[, list(X, X.1, X.3, X.4)]
install.packages("data.table")
direccion3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
archivo3 <- "GDP.csv"
download.file(direccion3, archivo3)
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <- GDP[X != ""]
GDP <- GDP[, list(X, X.1, X.3, X.4)]
library(data.table)
direccion3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
archivo3 <- "GDP.csv"
download.file(direccion3, archivo3)
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <- GDP[X != ""]
GDP <- GDP[, list(X, X.1, X.3, X.4)]
setnames(GDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "GDP"))
direccion4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
archivo4 <- "EDSTATS_Country.csv"
download.file(direccion4, archivo4, method="curl")
EDSTATS <- data.table(read.csv("EDSTATS_Country.csv"))
direccion4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
archivo4 <- "EDSTATS_Country.csv"
download.file(direccion4, archivo4)
EDSTATS <- data.table(read.csv("EDSTATS_Country.csv"))
data2 <- merge(GDP, EDSTATS, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(data2$rankingGDP)))
data2[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, GDP)][13]
data2[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
breaks <- quantile(data2$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
data2$quantileGDP <- cut(data2$rankingGDP, breaks = breaks)
data2[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
setwd('C:/Users/Anwaar/Desktop/Coursera/reproducible-research/RepData_PeerAssessment1')
getwd()
?unzip
if(!file.exists("./data")){dir.create("./data")}
unzip("activity.zip",exdir="./data")
activity <- read.csv("./data/activity.csv")
data <- read.csv("./data/activity.csv")
head(data)
head(data,10)
head(data,20)
data <- transform(dt, date=as.Date(date, format="%Y-%m-%d"))
data <- transform(data, date=as.Date(date, format="%Y-%m-%d"))
head(data)
data <- read.csv("./data/activity.csv")
data <- aggregate(steps ~ date, data = data, sum, na.rm = TRUE)
head(data)
echo = TRUE
data <- aggregate(steps ~ date, data = data, sum, na.rm = TRUE)
data <- read.csv("./data/activity.csv")
head(data)
data <- read.csv("./data/activity.csv", na.rm = TRUE)
data <- read.csv("./data/activity.csv")
data <- data[ with (data, { !(is.na(steps)) } ), ]
head(data)
library(knitr)
library(dplyr)
library(ggplot2)
opts_chunk$set(echo = TRUE)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
steps_by_day
head(steps_by_day)
hist(steps_by_day$total, main="Histogram of total number of steps per day",
xlab="Total number of steps in a day")
hist(steps_by_day$total, main="Histogram of total number of steps per day",
xlab="Total number of steps in a day",  ylab = "Frequency", col = "blue",
breaks = 30)
hist(steps_by_day$total, main="Histogram of total number of steps per day",
xlab="Total number of steps in a day",  ylab = "Frequency",
breaks = 30)
hist(steps_by_day$total, main="Histogram of total number of steps per day",
xlab="Total number of steps in a day",  ylab = "Frequency", col = "blue")
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "blue",
breaks = 30)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "blue",
breaks = 25)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "blue",
breaks = 25)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "blue",
breaks = 30)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
mean(steps_by_day$total, na.rm = T)
median(steps_by_day$total, na.rm = T)
steps_by_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_by_interval$interval, steps_by_interval$steps, type='l',
main="Average number of steps over all days", xlab="Interval",
ylab="Average number of steps")
plot(steps_by_interval$interval, steps_by_interval$steps, type='l',
main="Average daily steps pattern", xlab="Interval",
ylab="Average number of steps")
# find row with max of steps
max_steps_row <- which.max(steps_by_interval$steps)
# find interval with this max
steps_by_interval[max_steps_row, ]
sum(is.na(data))
data <- read.csv("./data/activity.csv")
sum(is.na(data))
data_rows <- read.csv("./data/activity.csv")
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
head(data)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
head(steps_by_day)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
mean(steps_by_day$total, na.rm = T)
median(steps_by_day$total, na.rm = T)
steps_by_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_by_interval$interval, steps_by_interval$steps, type='l',
main="Average daily steps pattern", xlab="Interval",
ylab="Average number of steps")
max_steps_row <- which.max(steps_by_interval$steps)
steps_by_interval[max_steps_row, ]
sum(is.na(data_rows))
mean(data_rows$steps, na.rm = T)
data$steps[is.na(data$steps)] <- mean(data$steps, na.rm = T)
colSums(is.na(data))
amdimputesteps <- tapply(data$steps, data$date, sum)
amdmeltimpute <- melt(amdimputesteps)
names(amdmeltimpute) <- c("Date", "SumofSteps")
head(amdmeltimpute)
amdmeltimpute <- melt(amdimputesteps)
library(reshape2)
amdmeltimpute <- melt(amdimputesteps)
names(amdmeltimpute) <- c("Date", "SumofSteps")
head(amdmeltimpute)
hist(amdmeltimpute$SumofSteps, main = "Histogram of Total Number of Steps per Day on  Impute Value",
xlab = "Total Number of Steps per Day", ylab = "Frequency", col = "blue",
breaks = 30)
mean(amdmeltimpute$SumofSteps, na.rm = T)
median(amdmeltimpute$SumofSteps, na.rm = T)
data$weekdays <- weekdays(data$date)
data$weeks[(data$weekdays == "Saturday" | data$weekdays == "Sunday")] <- "weekend"
data$weeks[!(data$weekdays == "Saturday" | data$weekdays == "Sunday")] <- "weekdays"
data$weekdays <- weekdays(data$date)
data$weeks[(data$weekdays == "Saturday" | data$weekdays == "Sunday")] <- "weekend"
data$weeks[!(data$weekdays == "Saturday" | data$weekdays == "Sunday")] <- "weekdays"
data$weekdays <- weekdays(data$date)
data$weekdays <- weekdays(data$date)
library(plyr)
data$weekdays <- weekdays(data$date)
library(lattice)
data$weekdays <- weekdays(data$date)
?weekdays()
weekdays()
data$weekdays <- weekdays(data$date)
data_rows$weekdays <- weekdays(data_rows$date)
data_rows <- read.csv("./data/activity.csv")
data_rows$date <- as.Date(data_rows$date)
data_rows$weekdays <- weekdays(data_rows$date)
data$weeks[(data$weekdays == "Saturday" | data$weekdays == "Sunday")] <- "weekend"
data$weeks[!(data$weekdays == "Saturday" | data$weekdays == "Sunday")] <- "weekdays"
data_rows$weeks[(data_rows$weekdays == "Saturday" | data_rows$weekdays == "Sunday")] <- "weekend"
data_rows$weeks[!(data_rows$weekdays == "Saturday" | data_rows$weekdays == "Sunday")] <- "weekdays"
week_comp <- ddply(data_rows, c("interval", "weeks"), function(x) apply(x[1],
2, mean))
head(week_comp)
xyplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
week_comp <- ddply(data_rows, c("interval", "weeks"), function(x) apply(x[1],
2, mean))
head(week_comp)
xyplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
qplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
plot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
plot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps")
xyplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
xyplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
xyplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps")
library(plyr)
library(lattice)
xyplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
xyplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
week_comp <- ddply(data_rows, c("interval", "weeks"), function(x) apply(x[1],
2, mean))
head(week_comp)
week_comp <- ddply(data, c("interval", "weeks"), function(x) apply(x[1],
2, mean))
head(week_comp)
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
week_comp <- ddply(data, c("interval", "weeks"), function(x) apply(x[1],
2, mean))
head(week_comp)
xyplot(steps ~ interval | weeks, data = week_comp, type = "l", xlab = "Interval",
ylab = "Number of steps", layout = c(1, 2))
## Basic Setting
library(knitr)
library(ggplot2)
library(plyr)
library(lattice)
library(reshape2)
data_rows <- read.csv("./data/activity.csv")
data_rows$date <- as.Date(data_rows$date)
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
head(data)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
head(steps_by_day)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
mean(steps_by_day$total, na.rm = T)
median(steps_by_day$total, na.rm = T)
by_day <- group_by(data_rows, date)
steps_by_day <- summarise(by_day, total = sum(steps))
head(steps_by_day)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
mean(steps_by_day$total, na.rm = T)
median(steps_by_day$total, na.rm = T)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
head(steps_by_day)
data_rows <- read.csv("./data/activity.csv")
data_rows$date <- as.Date(data_rows$date)
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
head(data)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
head(steps_by_day)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
## Basic Setting
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(lattice)
library(reshape2)
data_rows <- read.csv("./data/activity.csv")
data_rows$date <- as.Date(data_rows$date)
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
head(data)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
head(steps_by_day)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
data_rows <- read.csv("./data/activity.csv")
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
head(data)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
head(steps_by_day)
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
mean(steps_by_day$total, na.rm = T)
median(steps_by_day$total, na.rm = T)
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(lattice)
library(reshape2)
opts_chunk$set(echo = TRUE)
data_rows <- read.csv("./data/activity.csv")
#data_rows$date <- as.Date(data_rows$date)
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
head(data)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
steps_by_day
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
data_rows <- read.csv("./data/activity.csv")
data_rows$date <- as.Date(data_rows$date)
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
head(data)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
steps_by_day
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
mean(steps_by_day$total, na.rm = T)
median(steps_by_day$total, na.rm = T)
library(knitr)
library(ggplot2)
library(plyr)
library(dplyr)
library(lattice)
library(reshape2)
opts_chunk$set(echo = TRUE)
data_rows <- read.csv("./data/activity.csv")
data_rows$date <- as.Date(data_rows$date)
data <- data_rows[ with (data_rows, { !(is.na(steps)) } ), ]
head(data)
head(data,20)
by_day <- group_by(data, date)
steps_by_day <- summarise(by_day, total = sum(steps))
steps_by_day
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
hist(steps_by_day$total, main="Histogram of total number of steps per day",
xlab="Total number of steps in a day")
hist(steps_by_day$total, main="Histogram of Total Number of Steps per Day",
xlab="Total number of steps per day",  ylab = "Frequency", col = "green",
breaks = 30)
by_day <- group_by(data, date)
by_day
